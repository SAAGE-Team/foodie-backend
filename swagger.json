{
    "swagger": "2.0",
    "info": {
        "description": "Foodie APIs",
        "version": "1.0.0",
        "title": "Foodie APIs",
        "contact": {
            "name": "Anglebert",
            "email": "anglebert.dev@gmail.com"
        }
    },
    "tags": [{
        "name": "Users",
        "description": "Users management APIs"
    }
    ],
    "paths": {
      "/api/user/register":{
        "post":{
          "tags": [
            "Users"
          ],
          "summary": "Register a new user",
          "description": "Register a new user",
          "operationId": "registerUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be added",
              "required": true,
              "properties":{
                "email": {
                  "type": "string",
                  "example": "anglebert@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "helloworld12"
                },
                "names": {
                  "type": "string",
                  "example": "anglebert"
                },
                "telephone": {
                  "type": "integer",
                  "example": 784844820
                },
                "isAdmin": {
                  "type": "boolean",
                  "example": "user admin or not"
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "user created!"
            },
            "400": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/api/user/login":{
        "post":{
          "tags": [
            "Users"
          ],
          "summary": "Login a user",
          "description": "Login a user",
          "operationId": "loginUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be added",
              "required": true,
              "properties":{
                "email": {
                  "type": "string",
                  "example": "anglebert@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "helloworld12"
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "user logged in!"
            },
            "400": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/api/user/{id}":{
        "get":{
            "tags": [
                "Users"
            ],
            "summary": "Get a user by id",
            "description": "Get a user by id",
            "operationId": "getUserById",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "path",
                "name": "id",
                "description": "User given the  id",
                "required": true,
                "type": "string",
                "format": "int64"
                }
            ],
            "responses": {
                "200": {
                "description": "user found!"
                },
                "400": {
                "description": "no user found"
                }
            }
            
        },
        "delete":{
            "tags": [
                "Users"
            ],
            "summary": "Delete a user by id",
            "description": "Delete a user by id",
            "operationId": "deleteUserById",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "path",
                "name": "id",
                "description": "User given the  id",
                "required": true,
                "type": "string",
                "format": "int64"
                }
            ],
                "responses": {
                    "200": {
                    "description": "user deleted!"
                    },
                    "400": {
                    "description": "no user found"
                    }
                }     
            },
            "put":{
                "tags": [
                    "Users"
                ],
                "summary": "Update a user by id",
                "description": "Update a user by id",
                "operationId": "updateUserById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                    "in": "path",
                    "name": "id",
                    "description": "User given the  id",
                    "required": true,
                    "type": "string",
                    "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added",
                        "required": true,
                        "properties":{

                            "email": {
                                "type": "string",
                                "example": "updated email"
                              },
                              "password": {
                                "type": "string",
                                "example": "updated password"
                              },
                              "names": {
                                "type": "string",
                                "example": "updated names"
                              },
                              "telephone": {
                                "type": "string",
                                "example": "updated telephone"
                              }
                             
                        }
                    }

                ],
                "responses": {
                    "200": {
                    "description": "user updated!"
                    },
                    "400": {
                    "description": "no user found"
                    }
                }

            }
        },

        "api/user/allusers":{
            "get":{
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Get all users",
                "operationId": "getAllUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                    "description": "users found!"
                    },
                    "400": {
                    "description": "no users found"
                    }
                }
            }
        },
        "/api/user/verify_email":{
            "post":{
                "tags": [
                    "Users"
                ],
                "summary": "Verify a user email",
                "description": "Verify a user email",
                "operationId": "verifyUserEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added",
                        "required": true,
                        "properties":{
                            "email": {
                                "type": "string",
                                "example": "anglebert"
                            },
                            "code": {
                                "type": "string",
                                "example": "1245hrk2"
                            }
                        } 
                    }
                ],
                "responses": {
                    "200": {
                    "description": "user email verified!"
                    },
                    "400": {
                    "description": "verification failed"
                    }
                    }
                }
        }

    },    
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}